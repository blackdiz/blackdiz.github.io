<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on Blackdiz's Garage</title><link>https://blackdiz.github.io/tags/linux/</link><description>Recent content in linux on Blackdiz's Garage</description><generator>Hugo -- gohugo.io</generator><language>zh-TW</language><lastBuildDate>Wed, 21 Jul 2021 20:28:15 +0800</lastBuildDate><atom:link href="https://blackdiz.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux 2、1、&amp; 和 ></title><link>https://blackdiz.github.io/blog/linux-redirection-operators/</link><pubDate>Wed, 21 Jul 2021 20:28:15 +0800</pubDate><guid>https://blackdiz.github.io/blog/linux-redirection-operators/</guid><description>小記一下 command 2&amp;gt;&amp;amp;1 &amp;gt; /dev/null 和 command &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 的差別。首先先看 2&amp;gt;&amp;amp;1 的意思。在 Linux 的 file descriptor 中，1 表示 stdout (標準輸出) 表示程式執行中輸出訊息的地方，預設為 terminal。而 2 表示 stderr (標準錯誤輸出) 表示程式執行中發生錯誤時輸出錯誤訊息的地方，預設也是 terminal。
&amp;gt; 表示把 &amp;gt; 前方的輸出都導到 &amp;gt; 後方的目標。
而 &amp;gt;&amp;amp; 表示把 &amp;gt;&amp;amp; 前的 file descriptor 指向 &amp;gt;&amp;amp; 後方的 file descriptor，&amp;amp; 表示目標是 file descriptor 而不是檔案。
/dev/null 是個特殊的目標，任何輸入到它的訊息都會消失不會輸出到任何其他地方。
在了解各部分的作用後，現在把它們組合起來看，command 2&amp;gt;&amp;amp;1 &amp;gt; /dev/null 表示執行 command，把 stderr 輸出的目標指向 stdout 目前輸出的目標，因為 stdout 目前指向的目標是 terminal，所以 stderr 指向的目標就變成 terminal，最後 &amp;gt; /dev/null 表示把 stdout 輸出的目標指向 /dev/null，所以最終執行的結果就是 stderr 會輸出到 terminal 而 stdout 會輸出到 /dev/null。 command &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 則是執行 command，&amp;gt; /dev/null 會把 stdout 輸出目標指向 /dev/null，而最後面的 2&amp;gt;&amp;amp;1 會再把 stderr 輸出的目標指向目前 stdout 的輸出目標，所以也同樣變成 /dev/null，因此最終執行結果會是 stdout 和 stderr 都會輸出到 /dev/null 中。</description></item></channel></rss>