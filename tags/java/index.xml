<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>java on Blackdiz's Garage</title><link>https://blackdiz.github.io/tags/java/</link><description>Recent content in java on Blackdiz's Garage</description><generator>Hugo -- gohugo.io</generator><language>zh-TW</language><lastBuildDate>Sun, 11 Jul 2021 23:58:09 +0800</lastBuildDate><atom:link href="https://blackdiz.github.io/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Java: Compartion Violation 問題小記</title><link>https://blackdiz.github.io/blog/compartion-violation/</link><pubDate>Sun, 11 Jul 2021 23:58:09 +0800</pubDate><guid>https://blackdiz.github.io/blog/compartion-violation/</guid><description>前陣子和朋友討論一個奇妙的錯誤訊息，說在執行 Collections.sort(list) 時會出現。第一眼看到這個錯誤訊息，腦中只冒出無限多個問號，心中只有 OS：「這些工程師什麼時候才能好好說句人話&amp;hellip;」(話說你自己不也是工程師嘛)，沒辦法只好請出 Google 大神，誰叫我們都是 Google 工程師嘛。
原來在 JDK 1.7 後引入了 Tim Sort 這個排序法，Tim Sort 是 Merge Sort 的變型但更有效率，至於 Tim Sort 和 Merge Sort 具體的排序細節為何則不在本文範圍內(其實是我自己也還沒搞清楚 Tim Sort…)。 雖然比較有效率，但對於排序時如何比較被排序元素大小的邏輯正確性就更要求，要能使用 Collections.sort 的元素必須實作 Comparable 的 toCompare method，根據 API 說明，實作 compareTo 時，比較元素大小的邏輯必須符合下列原則：
相反性： A &amp;gt; B 時，必須符合 -A &amp;lt; B 遞延性：A &amp;gt; B 且 B &amp;gt; C 時，必須符合 A &amp;gt; C 必須符合 A == B 時，A == C 且 B == C 如果有違反這 3 個原則的話，有可能會在排序過程中拋出 IllegalArgumentException: Comparison method violates its general contract!</description></item><item><title>Use FreeMarker Template to Output JSON</title><link>https://blackdiz.github.io/blog/freemarker-json/</link><pubDate>Tue, 06 Jul 2021 01:28:39 +0800</pubDate><guid>https://blackdiz.github.io/blog/freemarker-json/</guid><description>Use FreeMarker Template to Output JSON 首先我們先準備一個 FreeMarker 的 template: test.fltj, fltj 是我們自創給 JSON 格式 tempalte 的副檔名:
{ &amp;quot;name&amp;quot;: &amp;quot;test&amp;quot;, ${content} } ${content} 就是我們等會兒要動態設置的部分。
接著我們需要建立 FreeMarker 的 Configruation，這個 Configuration 理論上只需要建立一個：
Configuration configuration = new Configuration(Configuration.VERSION_2_3_25); // 這裡設定 JSON 範本的路徑 configuration.setClassForTemplateLoading(this.getClass(), &amp;#34;/templates/json-templates&amp;#34;); configuration.setDefaultEncoding(&amp;#34;UTF-8&amp;#34;); configuration.setTemplateExceptionHandler(TemplateExceptionHandler.RETHROW_HANDLER); configuration.setLogTemplateExceptions(false); 這裡我們使用 jackson 這個 library 來幫我們把 Java 物件轉成 JSON 格式的字串：
Map&amp;lt;String, Object&amp;gt; data = new HashMap&amp;lt;&amp;gt;(); data.put(&amp;#34;text&amp;#34;, &amp;#34;test message&amp;#34;); data.put(&amp;#34;age&amp;#34;, 23); data.put(&amp;#34;boolean&amp;#34;, true); ObjectMapper mapper = new ObjectMapper(); // writerWithDefaultPrettyPrinter() 會排版輸出的結果 String jsonString = mapper.</description></item><item><title>H2 Database and SQL Alias Column Name</title><link>https://blackdiz.github.io/blog/sql-and-h2-db/</link><pubDate>Tue, 08 Jun 2021 07:59:46 +0800</pubDate><guid>https://blackdiz.github.io/blog/sql-and-h2-db/</guid><description>朋友問了一個奇妙的狀況，下面這個 Spring JPA 的 NativeQuery 回傳的 column name 應該是 as 之後的名稱 (以下為測試的 NativeQuery，非朋友實際執行的 SQL)：
String sql = &amp;#34;select Name as Name, SeqNo as SeqNo from Test where Name = :name&amp;#34;; List&amp;lt;Tuple&amp;gt; result = entityManager.createNativeQuery(sql, Tuple.class).setParameter(&amp;#34;name&amp;#34;, name) .getResultList(); return result; 也就是 Name 和 SeqNo，但跑出來的結果卻是全大寫的 NAME 和 SEQNO：
而且我使用 SQLServer 測試時無法重現這個狀況。一開始以為是不是 Spring JPA 的設定問題，但 Google 大神沒有降什麼神旨，翻了 Spring JPA 的文件也沒看到什麼相關的設定，想說只好用 debug 模式來追蹤一下到底執行過程中是不是有什麼地方會去修改 alias column name。 在追蹤的過程中，突然看到這行：
雖然和執行過程無關 😅，但 factory.getJdbcServices().getDialect() 讓我想到朋友用的是 H2 Database，馬上去官網查了一下發現果然是因為 H2 預設對於沒有使用 &amp;quot;&amp;quot; 括起來的欄位名稱都會依設定轉成全大寫或全小寫：</description></item><item><title>從 Server 端輸出下載的檔名含有中文會變成亂碼問題</title><link>https://blackdiz.github.io/blog/garbled-file-name/</link><pubDate>Mon, 22 Mar 2021 15:15:46 +0800</pubDate><guid>https://blackdiz.github.io/blog/garbled-file-name/</guid><description>從 Server 端輸出下載的檔名含有中文會變成亂碼問題 朋友遇到一個問題是如果檔名有中文，在瀏覽器下載時檔名會變成亂碼。
首先，瀏覽器是用 header 中的 Content-Disposition=attachment;filename=${檔名} 做為預設的下載檔名，但 header 中並不支援 UTF-8 編碼，所以如果在程式中直接拿中文檔名放在 filename 中就會變成亂碼。
解決方法是先把檔名 encode 成 URL-encoded 編碼，在 Java 中可以用 URLEncoder 處理：
response.setHeader(&amp;#34;Content-Disposition&amp;#34;, &amp;#34;attachment;filename=&amp;#34; + URLEncoder.encode(fileName, &amp;#34;UTF-8&amp;#34;); 如果有什麼想法或需要指正的地方，歡迎您留言或來信 😄</description></item></channel></rss>