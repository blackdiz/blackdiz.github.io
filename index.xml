<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blackdiz's Garage</title><link>https://blackdiz.github.io/</link><description>Recent content on Blackdiz's Garage</description><generator>Hugo -- gohugo.io</generator><language>zh-TW</language><lastBuildDate>Tue, 06 Jul 2021 01:28:39 +0800</lastBuildDate><atom:link href="https://blackdiz.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Use FreeMarker Template to Output JSON</title><link>https://blackdiz.github.io/blog/freemarker-json/</link><pubDate>Tue, 06 Jul 2021 01:28:39 +0800</pubDate><guid>https://blackdiz.github.io/blog/freemarker-json/</guid><description>Use FreeMarker Template to Output JSON 首先我們先準備一個 FreeMarker 的 template: test.fltj, fltj 是我們自創給 JSON 格式 tempalte 的副檔名:
{ &amp;#34;name&amp;#34;: &amp;#34;test&amp;#34;, ${content} } ${content} 就是我們等會兒要動態設置的部分。
接著我們需要建立 FreeMarker 的 Configruation，這個 Configuration 理論上只需要建立一個：
Configuration configuration = new Configuration(Configuration.VERSION_2_3_25); // 這裡設定 JSON 範本的路徑 configuration.setClassForTemplateLoading(this.getClass(), &amp;#34;/templates/json-templates&amp;#34;); configuration.setDefaultEncoding(&amp;#34;UTF-8&amp;#34;); configuration.setTemplateExceptionHandler(TemplateExceptionHandler.RETHROW_HANDLER); configuration.setLogTemplateExceptions(false); 然後我們使用 jackson 這個 library 來幫我們把 Java 物件轉成 JSON 格式的字串：
Map&amp;lt;String, Object&amp;gt; data = new HashMap&amp;lt;&amp;gt;(); data.put(&amp;#34;text&amp;#34;, &amp;#34;test message&amp;#34;); data.put(&amp;#34;age&amp;#34;, 23); data.put(&amp;#34;boolean&amp;#34;, true); ObjectMapper mapper = new ObjectMapper(); // writerWithDefaultPrettyPrinter() 會排版輸出的結果 String jsonString = mapper.</description></item><item><title>Leetcode 136. Single Number</title><link>https://blackdiz.github.io/blog/leetcode-136/</link><pubDate>Sun, 27 Jun 2021 21:35:21 +0800</pubDate><guid>https://blackdiz.github.io/blog/leetcode-136/</guid><description>LeetCode 136. Single Number Easy
題目 Given a non-empty array of integers, every element appears twice except for one. Find that single one.
Note:
Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?
Example 1:
Input: [2,2,1] Output: 1 Example 2:
Input: [4,1,2,1,2] Output: 4 解決方法 1 (My Own Solution) 用最笨的暴力方式每次取 1 個元素和它以外的元素比對, 比到重複的就跳出該次迴圈直到找到沒重複的。 這題如果只是要求解的話很簡單，除了用巢狀回圈外，還可以遍歷陣列用 Map 記錄元素出現個次數後，再從 Map 中找出只現在一次的元素，但這些簡單的解法都不符合額外的要求，也就是必須在 $O(N)$ 的時間複雜度下不使用額外的空間，所以就不列出其他這類簡單解法了。
Java Code class Solution { public int singleNumber(int[] nums) { int singleNumber = nums[0]; for (int i = 0; i &amp;lt; nums.</description></item><item><title>LeetCode 104. Maximum Depth of Binary Tree</title><link>https://blackdiz.github.io/blog/leetcode-104/</link><pubDate>Wed, 09 Jun 2021 01:14:14 +0800</pubDate><guid>https://blackdiz.github.io/blog/leetcode-104/</guid><description>LeetCode 104. Maximum Depth of Binary Tree Easy
題目 Given a binary tree, find its maximum depth.
The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.
Note: A leaf is a node with no children.
Example:
Given binary tree [3,9,20,null,null,15,7],
3 / \ 9 20 / \ 15 7 return its depth = 3.
解決方法 1 (My Own Solution) 我們用 2 個變數分別記錄目前所在的層數和目前到過的最大層數，每到一層時如果目前所在的層數大於到過的最大層數就更新最大層數。</description></item><item><title>H2 Database and SQL Alias Column Name</title><link>https://blackdiz.github.io/blog/sql-and-h2-db/</link><pubDate>Tue, 08 Jun 2021 07:59:46 +0800</pubDate><guid>https://blackdiz.github.io/blog/sql-and-h2-db/</guid><description>朋友問了一個奇妙的狀況，下面這個 Spring JPA 的 NativeQuery 回傳的 column name 應該是 as 之後的名稱 (以下為測試的 NativeQuery，非朋友實際執行的 SQL)：
String sql = &amp;#34;select Name as Name, SeqNo as SeqNo from Test where Name = :name&amp;#34;; List&amp;lt;Tuple&amp;gt; result = entityManager.createNativeQuery(sql, Tuple.class).setParameter(&amp;#34;name&amp;#34;, name) .getResultList(); return result; 也就是 Name 和 SeqNo，但跑出來的結果卻是全大寫的 NAME 和 SEQNO：
而且我使用 SQLServer 測試時無法重現這個狀況。一開始以為是不是 Spring JPA 的設定問題，但 Google 大神沒有降什麼神旨，翻了 Spring JPA 的文件也沒看到什麼相關的設定，想說只好用 debug 模式來追蹤一下到底執行過程中是不是有什麼地方會去修改 alias column name。 在追蹤的過程中，突然看到這行：
雖然和執行過程無關 😅，但 factory.getJdbcServices().getDialect() 讓我想到朋友用的是 H2 Database，馬上去官網查了一下發現果然是因為 H2 預設對於沒有使用 &amp;quot;&amp;quot; 括起來的欄位名稱都會依設定轉成全大寫或全小寫：</description></item><item><title>LeetCode 55. Jump Game</title><link>https://blackdiz.github.io/blog/leetcode-55/</link><pubDate>Fri, 04 Jun 2021 07:23:28 +0800</pubDate><guid>https://blackdiz.github.io/blog/leetcode-55/</guid><description>LeetCode 55. Jump Game Medium
Given an array of non-negative integers nums, you are initially positioned at the first index of the array.
Each element in the array represents your maximum jump length at that position.
Determine if you are able to reach the last index.
Example 1:
Input: nums = [2,3,1,1,4] Output: true Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index. Example 2:</description></item><item><title>LeetCode 344. Reverse String</title><link>https://blackdiz.github.io/blog/leetcode-344/</link><pubDate>Fri, 26 Mar 2021 10:56:51 +0800</pubDate><guid>https://blackdiz.github.io/blog/leetcode-344/</guid><description>LeetCode 344. Reverse String Easy
題目 Write a function that reverses a string. The input string is given as an array of characters char[].
Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.
You may assume all the characters consist of printable ascii characters.
Example 1:
Input: [&amp;quot;h&amp;quot;,&amp;quot;e&amp;quot;,&amp;quot;l&amp;quot;,&amp;quot;l&amp;quot;,&amp;quot;o&amp;quot;] Output: [&amp;quot;o&amp;quot;,&amp;quot;l&amp;quot;,&amp;quot;l&amp;quot;,&amp;quot;e&amp;quot;,&amp;quot;h&amp;quot;] Example 2:
Input: [&amp;quot;H&amp;quot;,&amp;quot;a&amp;quot;,&amp;quot;n&amp;quot;,&amp;quot;n&amp;quot;,&amp;quot;a&amp;quot;,&amp;quot;h&amp;quot;] Output: [&amp;quot;h&amp;quot;,&amp;quot;a&amp;quot;,&amp;quot;n&amp;quot;,&amp;quot;n&amp;quot;,&amp;quot;a&amp;quot;,&amp;quot;H&amp;quot;] 解決方法1 (My Own Solution) 用兩個指標 start 和 end 分別由陣列第一個和最後一個元素開始交換位置，並且彼此慢慢靠近，因為字串長度可能為奇數或偶數，所以直到 start &amp;gt;= end 為止 (當為奇數時 start == end，當為偶數時兩者會交錯所以用 start &amp;gt; end 判斷)。</description></item><item><title>從 Server 端輸出下載的檔名含有中文會變成亂碼問題</title><link>https://blackdiz.github.io/blog/garbled-file-name/</link><pubDate>Mon, 22 Mar 2021 15:15:46 +0800</pubDate><guid>https://blackdiz.github.io/blog/garbled-file-name/</guid><description>從 Server 端輸出下載的檔名含有中文會變成亂碼問題 朋友遇到一個問題是如果檔名有中文，在瀏覽器下載時檔名會變成亂碼。
首先，瀏覽器是用 header 中的 Content-Disposition=attachment;filename=${檔名} 做為預設的下載檔名，但 header 中並不支援 UTF-8 編碼，所以如果在程式中直接拿中文檔名放在 filename 中就會變成亂碼。
解決方法是先把檔名 encode 成 URL-encoded 編碼，在 Java 中可以用 URLEncoder 處理：
response.setHeader(&amp;#34;Content-Disposition&amp;#34;, &amp;#34;attachment;filename=&amp;#34; + URLEncoder.encode(fileName, &amp;#34;UTF-8&amp;#34;); 如果有什麼想法或需要指正的地方，歡迎您留言或來信 😄</description></item><item><title>About</title><link>https://blackdiz.github.io/about/</link><pubDate>Sat, 20 Mar 2021 19:24:20 +0800</pubDate><guid>https://blackdiz.github.io/about/</guid><description>一名充滿好奇心的小小工程師，學習程式喜歡了解探究原理。因為自知美感欠知所以興趣集中在後端系統上，覺得看到大系統中每個組件能完美地契合運作是件非常美妙的事。 這裡記錄著各種學習記錄、工作上遇到的各種問題和解法，如果有錯誤的地方歡迎指教。
Email: blackdiz@gmail.com
Github: https://github.com/blackdiz</description></item><item><title>LeetCode 1. Two Sum</title><link>https://blackdiz.github.io/blog/leetcode-1/</link><pubDate>Tue, 01 Dec 2020 23:10:57 +0800</pubDate><guid>https://blackdiz.github.io/blog/leetcode-1/</guid><description>LeetCode 1. Two Sum Easy
Given an array of integers, return indices of the two numbers such that they add up to a specific target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
Example:
Given nums = [2, 7, 11, 15], target = 9, Because nums[0] + nums[1] = 2 + 7 = 9, return [0, 1]. 解決方法 1 (My Own Solution) 直覺的話就是暴力解法，用所有元素組合兩兩相加直到找出加總等於 target 為止。</description></item></channel></rss>